buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/libs-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.0.BUILD-SNAPSHOT")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'eclipse'

jar {
    baseName = 'spatial.hibernate'
    version =  '0.0.1-SNAPSHOT'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }

    maven { url "http://download.osgeo.org/webdav/geotools" }
    maven { url "http://www.hibernatespatial.org/repository" }
    maven { url "http://repo.opengeo.org" }
    maven { url "http://dev.mapfish.org/maven/repository/" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    // it contains h2
    compile("org.opengeo:geodb:0.7")
    compile("org.hibernate:hibernate-spatial:4.3")
    compile("com.vividsolutions:jts:1.13")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

// The class to run from the command line.
// The command line is gradle bootRun
springBoot {
    mainClass = "edu.houyhnhnm.Runner"
}
